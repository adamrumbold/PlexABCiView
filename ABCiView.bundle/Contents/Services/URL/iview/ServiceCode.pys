# getSeries: http://iview.abc.net.au/api/legacy/flash/?series=$ID
# getAllSeries: http://iview.abc.net.au/api/legacy/flash/?series=all

def MetadataObjectForURL(url):
    
    #if CHECKURL
    #
    data = JSON.ObjectFromURL(url)
    Log('>>>>>>>>SERVICE: MetadataObjectForURL: ' + url)
    #title = data['name']
    #summary = data['shortDescription']
    #thumb = data['thumbnailURL']
    #duration = data['length']
    #originally_available_at = Datetime.FromTimestamp(int(data['publishedDate'])/1000)
    #
    #return VideoClipObject(
    #    title=title,
    #    summary=summary,
    #    thumb=thumb,
    #    duration=duration,
    #    originally_available_at=originally_available_at,
    #)


def MediaObjectsForURL(url):
    
    container = Container.MP4
    video_codec = VideoCodec.H264
    audio_codec = AudioCodec.AAC
    audio_channels = 2

    return [
        MediaObject(
            protocol='rtmp',
            video_resolution='576',
            audio_channels=2,
            parts=[PartObject(key=Callback(PlayVideo, url=url))],
        ),
    ]

@indirect
def PlayVideo(url):
    #do the work to return get the RTMP URL
    
    return IndirectResponse(VideoClipObject, key=RTMPVideoURL(url=rtmp_base, clip=rtmp_clip))
    #data = JSON.ObjectFromURL(url)    
    #return Redirect(data['FLVURL'])